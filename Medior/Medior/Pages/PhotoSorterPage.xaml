<Page
    x:Class="Medior.Pages.PhotoSorterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Medior.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Grid Padding="10" Grid.RowDefinitions="Auto, *" RowSpacing="10">

        <Grid Grid.Row="0" Grid.ColumnDefinitions="Auto, *">
            <ComboBox Grid.Column="0" 
                      PlaceholderText="Select or create a sort job"
                      DisplayMemberPath="Name"
                      SelectedValuePath="Id"
                      ItemsSource="{x:Bind ViewModel.SortJobs, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.SelectedJob, Mode=TwoWay}"
                      SelectionChanged="SortJobComboBox_SelectionChanged"
                      VerticalAlignment="Center">
            </ComboBox>

            <CommandBar Grid.Column="1" DefaultLabelPosition="Right" HorizontalAlignment="Left">
                <AppBarButton Label="New" Icon="Add" Command="{x:Bind NewJob}"/>
                <AppBarButton Label="Save" Icon="Save" Command="{x:Bind SaveJob}" />
                <AppBarButton Label="Rename" Icon="Rename" Command="{x:Bind RenameJob }" />
                <AppBarButton Label="Delete" Icon="Delete" Command="{x:Bind DeleteJob }" />
            </CommandBar>

            <TeachingTip x:Name="SavedTip" 
                         Title="Sort job saved."
                         IsLightDismissEnabled="True">
                <TeachingTip.IconSource>
                    <SymbolIconSource Symbol="Accept"></SymbolIconSource>
                </TeachingTip.IconSource>
            </TeachingTip>
        </Grid>

        <Grid Grid.Row="1">
            <Grid RowSpacing="10"
                  ColumnSpacing="10"
                  Grid.ColumnDefinitions="Auto, *" 
                  Grid.RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, Auto, *">
                

                <TextBlock Grid.Row="0" Text="Source Directory" VerticalAlignment="Center" />
                <TextBox Grid.Row="0" Grid.Column="1" 
                         PlaceholderText="The source directory to search recursively for photos and videos"
                         Text="{x:Bind ViewModel.SelectedJob.SourceDirectory, Mode=TwoWay}" />

                <TextBlock Grid.Row="1" Text="Destination File Path" VerticalAlignment="Center"/>
                <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnDefinitions="*, Auto, Auto" ColumnSpacing="10">
                    <TextBox Grid.Column="0" 
                         PlaceholderText="The destination path, after variables are transformed, where each file will be placed."
                         Text="{x:Bind ViewModel.SelectedJob.DestinationFile, Mode=TwoWay}" TextChanged="DestinationFileTextBox_TextChanged" />

                    <Button Grid.Column="1" 
                            ToolTipService.ToolTip="Show destination path as if it were applied to an example file named 'Example.ext', with a date taken of right now." 
                            Command="{x:Bind ShowDestinationTransform}">
                        <SymbolIcon Symbol="Accept" />
                    </Button>
                    
                    <Button Grid.Column="2" ToolTipService.ToolTip="Variable help">
                        <SymbolIcon Symbol="Help" />

                        <Button.Flyout>
                            <Flyout>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold" Text="Available Variables" Margin="0,0,0,10" />
                                    <TextBlock>{year} - Year taken</TextBlock>
                                    <TextBlock>{month} - Month taken</TextBlock>
                                    <TextBlock>{day} - Day taken</TextBlock>
                                    <TextBlock>{hour} - Hour taken</TextBlock>
                                    <TextBlock>{minute} - Minute taken</TextBlock>
                                    <TextBlock>{second} - Second taken</TextBlock>
                                    <TextBlock>{millisecond} - Millisecond take</TextBlock>
                                    <TextBlock>{filename} - File name without extension</TextBlock>
                                    <TextBlock>{extension} - File extension</TextBlock>
                                    <TextBlock>{camera} - Camera model</TextBlock>
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Grid>
                
                <TextBlock Grid.Row="2" Text="Sort Operation" VerticalAlignment="Center" />
                <ComboBox Grid.Row="2" 
                          Grid.Column="1"
                          ItemsSource="{x:Bind ViewModel.GetSortOperations()}"
                          SelectedItem="{x:Bind ViewModel.SelectedJob.Operation, Mode=TwoWay}" />

                <TextBlock Grid.Row="3" Text="Overwrite Action" VerticalAlignment="Center" />
                <ComboBox Grid.Row="3" 
                          Grid.Column="1"
                          ItemsSource="{x:Bind ViewModel.GetOverwriteActions()}"
                          SelectedItem="{x:Bind ViewModel.SelectedJob.OverwriteAction, Mode=TwoWay}" />

                <TextBlock Grid.Row="4" Text="Include Extensions" VerticalAlignment="Center" />
                <TextBox Grid.Row="4" 
                         Grid.Column="1"
                         PlaceholderText="A comma-separted list of extensions to include (e.g. 'jpg, png').  Use '*' for all except excluded extensions."
                         Text="{x:Bind ViewModel.GetIncludeExtensions(), BindBack=ViewModel.SetIncludeExtensions, Mode=TwoWay}" />

                <TextBlock Grid.Row="5" Text="Exclude Extensions" VerticalAlignment="Center" />
                <TextBox Grid.Row="5" 
                         Grid.Column="1"
                         PlaceholderText="A comma-separated list of extensions to exclude/skip (e.g. 'mp4, mov')."
                         Text="{x:Bind ViewModel.GetExcludeExtensions(), BindBack=ViewModel.SetExcludeExtensions, Mode=TwoWay}" />

                <TextBlock Grid.Row="6" Text="Missing EXIF Directory" VerticalAlignment="Center" />
                <TextBox Grid.Row="6" 
                         Grid.Column="1"
                         PlaceholderText="Where to move files that do not contain EXIF data.  Leave blank to leave files in place."
                         Text="{x:Bind ViewModel.SelectedJob.NoExifDirectory, Mode=TwoWay}" />

                <Grid Grid.Row="8" 
                      Grid.ColumnSpan="2" 
                      ColumnSpacing="20" 
                      ColumnDefinitions="*, Auto" 
                      VerticalAlignment="Bottom">

                    <Grid Grid.Column="0"
                          RowDefinitions="*, *"
                          Visibility="{x:Bind ViewModel.IsJobRunning, Mode=OneWay}">
                        
                        <TextBlock Text="{x:Bind ViewModel.CurrentJobRunnerTask, Mode=OneWay}" HorizontalAlignment="Center" />
                        
                        <ProgressBar Grid.Row="1"
                                     Maximum="100"
                                     Value="{x:Bind ViewModel.JobRunnerProgress, Mode=OneWay}" />
                        
                        <TextBlock Grid.Row="1"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Center" 
                                   Text="{x:Bind ViewModel.JobRunnerProgressPercent, Mode=OneWay}" />
                    </Grid>

                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <CheckBox Content="Dry Run" 
                                  IsChecked="{x:Bind ViewModel.IsDryRun, Mode=TwoWay}"
                                  ToolTipService.ToolTip="Simulate running this job and get a report of what will happen, without actually making changes."/>
                        
                        <Button Content="Cancel" Command="{x:Bind CancelJob}" />
                        <Button Content="Start" Command="{x:Bind StartJob}" Margin="10,0,0,0" />
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>
